{"version":3,"file":"angular-weblineindia-text-box.umd.js.map","sources":["ng://angular-weblineindia-text-box/lib/text.service.ts","ng://angular-weblineindia-text-box/lib/text.component.ts","ng://angular-weblineindia-text-box/lib/text.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TextService {\n\n  constructor() { }\n}\n","import { Component, Input, Output, EventEmitter } from \"@angular/core\";\n\n@Component({\n  selector: \"lib-text\",\n  template: `<input\n[id] =\"id\"\n[name]=\"name\"\n[value]=\"value\"\n[tabindex]=\"tabindex\"\n[placeholder]=\"placeholder\"\n[disabled]=\"disabled\"\n[type]=\"type\"\n[maxLength]=\"maxLength\"\n[className]=\"className\"\n(focus)=\"onFocus($event)\"\n(blur)=\"onBlur($event)\"\n(input)=\"onChange($event)\"\n(keydown)=\"onKeyDown($event)\"\n(keypress)=\"onKeyPress($event)\"\n(keyup)=\"onKeyUp($event)\"\n/>`,\n  styles: []\n})\nexport class TextComponent {\n  @Input() maxLength: Number = 10;\n  @Input() isnumberonly: Boolean = false;\n  @Input() className: object = {};\n  @Input() regex: any;\n  @Input() disabled: boolean = false;\n  @Input() value: String;\n  @Input() tabindex: Number = 0;\n  @Input() type: String = \"text\";\n  @Input() id: String = \"\";\n  @Input() name: String = \"\";\n  @Input() placeholder: String = \"Enter value\";\n\n  @Output() change: EventEmitter<any> = new EventEmitter<any>();\n  @Output() focus: EventEmitter<any> = new EventEmitter<any>();\n  @Output() KeyDown: EventEmitter<any> = new EventEmitter<any>();\n  @Output() KeyPress: EventEmitter<any> = new EventEmitter<any>();\n  @Output() KeyUp: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() blur: EventEmitter<any> = new EventEmitter<any>();\n\n  onFocus(event) {\n    this.focus.emit(event);\n  }\n  onBlur(event) {\n    this.blur.emit(event);\n  }\n  onChange(event) {\n    this.change.emit(event);\n  }\n  onKeyDown(event) {\n    this.KeyDown.emit(event);\n  }\n  onKeyUp(event) {\n    this.KeyUp.emit(event);\n  }\n  onKeyPress(event) {\n    this.KeyPress.emit(event);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { TextComponent } from './text.component';\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [TextComponent],\n  exports: [TextComponent]\n})\nexport class TextModule { }\n"],"names":["Injectable","EventEmitter","Component","Input","Output","NgModule"],"mappings":";;;;;;;;;;AAAA;QAOE;SAAiB;;oBALlBA,aAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;;0BAJD;;;;;;;ACAA;;6BAwB+B,EAAE;gCACE,KAAK;6BACT,EAAE;4BAEF,KAAK;4BAEN,CAAC;wBACL,MAAM;sBACR,EAAE;wBACA,EAAE;+BACK,aAAa;0BAEN,IAAIC,eAAY,EAAO;yBACxB,IAAIA,eAAY,EAAO;2BACrB,IAAIA,eAAY,EAAO;4BACtB,IAAIA,eAAY,EAAO;yBAC1B,IAAIA,eAAY,EAAO;wBAExB,IAAIA,eAAY,EAAO;;;;;;QAE3D,+BAAO;;;;YAAP,UAAQ,KAAK;gBACX,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACxB;;;;;QACD,8BAAM;;;;YAAN,UAAO,KAAK;gBACV,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACvB;;;;;QACD,gCAAQ;;;;YAAR,UAAS,KAAK;gBACZ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACzB;;;;;QACD,iCAAS;;;;YAAT,UAAU,KAAK;gBACb,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC1B;;;;;QACD,+BAAO;;;;YAAP,UAAQ,KAAK;gBACX,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACxB;;;;;QACD,kCAAU;;;;YAAV,UAAW,KAAK;gBACd,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC3B;;oBA3DFC,YAAS,SAAC;wBACT,QAAQ,EAAE,UAAU;wBACpB,QAAQ,EAAE,6YAgBT;wBACD,MAAM,EAAE,EAAE;qBACX;;;gCAEEC,QAAK;mCACLA,QAAK;gCACLA,QAAK;4BACLA,QAAK;+BACLA,QAAK;4BACLA,QAAK;+BACLA,QAAK;2BACLA,QAAK;yBACLA,QAAK;2BACLA,QAAK;kCACLA,QAAK;6BAELC,SAAM;4BACNA,SAAM;8BACNA,SAAM;+BACNA,SAAM;4BACNA,SAAM;2BAENA,SAAM;;4BA1CT;;;;;;;ACAA;;;;oBAGCC,WAAQ,SAAC;wBACR,OAAO,EAAE,EACR;wBACD,YAAY,EAAE,CAAC,aAAa,CAAC;wBAC7B,OAAO,EAAE,CAAC,aAAa,CAAC;qBACzB;;yBARD;;;;;;;;;;;;;;;;;;;;;;;;;"}
