{"version":3,"file":"angular-weblineindia-text-box.js.map","sources":["ng://angular-weblineindia-text-box/lib/text.service.ts","ng://angular-weblineindia-text-box/lib/text.component.ts","ng://angular-weblineindia-text-box/lib/text.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TextService {\n\n  constructor() { }\n}\n","import { Component, Input, Output, EventEmitter } from \"@angular/core\";\n\n@Component({\n  selector: \"lib-text\",\n  template: `<input\n[id] =\"id\"\n[name]=\"name\"\n[value]=\"value\"\n[tabindex]=\"tabindex\"\n[placeholder]=\"placeholder\"\n[disabled]=\"disabled\"\n[type]=\"type\"\n[maxLength]=\"maxLength\"\n[className]=\"className\"\n(focus)=\"onFocus($event)\"\n(blur)=\"onBlur($event)\"\n(input)=\"onChange($event)\"\n(keydown)=\"onKeyDown($event)\"\n(keypress)=\"onKeyPress($event)\"\n(keyup)=\"onKeyUp($event)\"\n/>`,\n  styles: []\n})\nexport class TextComponent {\n  @Input() maxLength: Number = 10;\n  @Input() isnumberonly: Boolean = false;\n  @Input() className: object = {};\n  @Input() regex: any;\n  @Input() disabled: boolean = false;\n  @Input() value: String;\n  @Input() tabindex: Number = 0;\n  @Input() type: String = \"text\";\n  @Input() id: String = \"\";\n  @Input() name: String = \"\";\n  @Input() placeholder: String = \"Enter value\";\n\n  @Output() change: EventEmitter<any> = new EventEmitter<any>();\n  @Output() focus: EventEmitter<any> = new EventEmitter<any>();\n  @Output() KeyDown: EventEmitter<any> = new EventEmitter<any>();\n  @Output() KeyPress: EventEmitter<any> = new EventEmitter<any>();\n  @Output() KeyUp: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() blur: EventEmitter<any> = new EventEmitter<any>();\n\n  onFocus(event) {\n    this.focus.emit(event);\n  }\n  onBlur(event) {\n    this.blur.emit(event);\n  }\n  onChange(event) {\n    this.change.emit(event);\n  }\n  onKeyDown(event) {\n    this.KeyDown.emit(event);\n  }\n  onKeyUp(event) {\n    this.KeyUp.emit(event);\n  }\n  onKeyPress(event) {\n    this.KeyPress.emit(event);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { TextComponent } from './text.component';\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [TextComponent],\n  exports: [TextComponent]\n})\nexport class TextModule { }\n"],"names":[],"mappings":";;;;;;AAAA;IAOE;KAAiB;;gBALlB,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;;;sBAJD;;;;;;;ACAA;;yBAwB+B,EAAE;4BACE,KAAK;yBACT,EAAE;wBAEF,KAAK;wBAEN,CAAC;oBACL,MAAM;kBACR,EAAE;oBACA,EAAE;2BACK,aAAa;sBAEN,IAAI,YAAY,EAAO;qBACxB,IAAI,YAAY,EAAO;uBACrB,IAAI,YAAY,EAAO;wBACtB,IAAI,YAAY,EAAO;qBAC1B,IAAI,YAAY,EAAO;oBAExB,IAAI,YAAY,EAAO;;;;;;IAE3D,+BAAO;;;;IAAP,UAAQ,KAAK;QACX,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACxB;;;;;IACD,8BAAM;;;;IAAN,UAAO,KAAK;QACV,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACvB;;;;;IACD,gCAAQ;;;;IAAR,UAAS,KAAK;QACZ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACzB;;;;;IACD,iCAAS;;;;IAAT,UAAU,KAAK;QACb,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC1B;;;;;IACD,+BAAO;;;;IAAP,UAAQ,KAAK;QACX,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACxB;;;;;IACD,kCAAU;;;;IAAV,UAAW,KAAK;QACd,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC3B;;gBA3DF,SAAS,SAAC;oBACT,QAAQ,EAAE,UAAU;oBACpB,QAAQ,EAAE,6YAgBT;oBACD,MAAM,EAAE,EAAE;iBACX;;;4BAEE,KAAK;+BACL,KAAK;4BACL,KAAK;wBACL,KAAK;2BACL,KAAK;wBACL,KAAK;2BACL,KAAK;uBACL,KAAK;qBACL,KAAK;uBACL,KAAK;8BACL,KAAK;yBAEL,MAAM;wBACN,MAAM;0BACN,MAAM;2BACN,MAAM;wBACN,MAAM;uBAEN,MAAM;;wBA1CT;;;;;;;ACAA;;;;gBAGC,QAAQ,SAAC;oBACR,OAAO,EAAE,EACR;oBACD,YAAY,EAAE,CAAC,aAAa,CAAC;oBAC7B,OAAO,EAAE,CAAC,aAAa,CAAC;iBACzB;;qBARD;;;;;;;;;;;;;;;"}
